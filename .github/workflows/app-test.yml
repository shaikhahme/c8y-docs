name: app-tester
on:
  workflow_dispatch:
  schedule:
    - cron: 00 19 * * *

permissions:
  pull-requests: write
  contents: write

jobs:
  test-app:
    name: Get component details
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: pipeline-read

    steps:
      - name: checking out 1st repo
        uses: actions/checkout@v4
        with:
          path: docs
          fetch-depth: 1

      - name: echo git repo-1
        run: |
          echo ${{ github.repository }} 
          echo ${{ github.repository_owner }}

      - name: Get token
        id: token
        run: |
          githubAppID="${{ vars.APP_ID }}"
          githubAppPrivateKey="${{ secrets.APP_PRIVATE_KEY }}"
          echo "Test"
          echo $githubAppID $githubAppPrivateKey
          
          iat=$(date +%s)
          # Expire 9 minutes in the future. 10 minutes is the max for GitHub
          exp=$((iat + 540))
          # Generate encoded JWT header
          jwtHeaderRaw='{"alg":"RS256"}'
          jwtHeader=$( echo -n "${jwtHeaderRaw}" | openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n' )
          # Generate encoded JWT payload
          jwtPayloadRaw='{"iat":'"${iat}"',"exp":'"${exp}"',"iss":'"${githubAppID}"'}'
          jwtPayload=$( echo -n "${jwtPayloadRaw}" | openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n' )
          # Generate encoded JWT signature
          jwtSignature=$( openssl dgst -sha256 -sign <(echo -n "${githubAppPrivateKey}") <(echo -n "${jwtHeader}.${jwtPayload}") | openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n' )
          jwtToken=${jwtHeader}.${jwtPayload}.${jwtSignature}
          
          echo "JWT Header: $jwtHeader"
          echo "JWT Payload: $jwtPayload"
          echo "JWT SIGN: $jwtSignature"
          echo "JWT Token: $jwtToken" 
          
          echo "jwt=${jwtToken}" >> "${GITHUB_OUTPUT}"

      - name: GitHub app JWT
        id: github-app-jwt-generator
        uses: jamestrousdale/github-app-jwt-token@0.1.4
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}"

      - name: Generate installation access token
        run: |
          githubApiUrl = "https://github.softwareag.com"
          githubInstallationID= 54491700
          GITHUB_APP_JWT=${{ steps.github-app-jwt-generator.outputs.jwt }}
          echo $GITHUB_APP_JWT
          echo $ {{steps.generate-app-jwt.outputs.jwtToken}}
          
          access_token=$(curl --fail --silent -X POST -H "Authorization: Bearer ${jwtToken}" -H "Accept: application/vnd.github.v3+json" "${githubApiUrl}/app/installations/${githubAppInstallationId}/access_tokens" | jq -r .token)
          echo $access_token
